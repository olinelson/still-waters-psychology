{"version":3,"sources":["webpack:///./src/images/logos/aps.jpeg","webpack:///./src/pages/staff.js","webpack:///./src/images/resources/image_11_Water_drops_1.jpg","webpack:///./node_modules/@babel/runtime/helpers/objectWithoutProperties.js","webpack:///./src/images/logos/medicare.jpg","webpack:///./src/images/logos/apa.png","webpack:///./node_modules/semantic-ui-react/dist/es/modules/Tab/TabPane.js","webpack:///./node_modules/semantic-ui-react/dist/es/modules/Tab/Tab.js","webpack:///./src/images/logos/ahpra.png","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardDescription.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardHeader.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardMeta.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardContent.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardGroup.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/Card.js"],"names":["module","exports","Staff","useState","topOfTabRef","useRef","panes","allMarkdownRemark","nodes","map","p","menuItem","frontmatter","title","render","text","dangerouslySetInnerHTML","__html","html","push","hidden","Group","centered","image","medicare","style","justifyContent","padding","href","ahpra","aps","apa","background","src","waterDrops","ref","minHeight","menu","fluid","stackable","vertical","objectWithoutPropertiesLoose","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","TabPane","props","active","children","className","content","loading","classes","rest","getUnhandledProps","ElementType","getElementType","calculatedDefaultProps","Segment","attached","createElement","isNil","handledProps","defaultProps","as","propTypes","create","_Component","Tab","_getPrototypeOf2","_this","this","_len","arguments","args","Array","_key","apply","concat","e","_ref","index","activeIndex","trySetState","value","_this$props","renderActiveOnly","state","_ref2","pane","overrideProps","_this$props2","menuPosition","tabular","Menu","autoGenerateKey","items","onItemClick","handleItemClick","_this$props3","grid","paneWidth","tabWidth","gridProps","position","Grid","GridColumn","width","renderItems","stretched","renderMenu","renderVertical","CardDescription","textAlign","CardHeader","CardMeta","CardContent","description","extra","header","meta","val","CardGroup","doubling","itemsPerRow","itemsJSX","item","join","Card","onClick","color","link","raised","handleClick","Image"],"mappings":"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","file":"component---src-pages-staff-js-83164ddc7ebaaa2237d5.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/aps-6c2f4c5d5d305243a5882982e9110ed4.jpeg\";","import React, { useState, useRef } from 'react'\nimport { Jumbotron } from '../components/StyledComponents'\nimport { Link, graphql, useStaticQuery } from 'gatsby'\nimport {\n  Container,\n  Image,\n  Divider,\n  Card,\n  Tab,\n  Responsive,\n} from 'semantic-ui-react'\nimport Layout from '../components/layout'\n\n// images\nimport waterDrops from '../images/resources/image_11_Water_drops_1.jpg'\nimport medicare from '../images/logos/medicare.jpg'\nimport ahpra from '../images/logos/ahpra.png'\nimport aps from '../images/logos/aps.jpeg'\nimport apa from '../images/logos/apa.png'\n\nexport default function Staff() {\n  const [activeItem] = useState('biography')\n  const topOfTabRef = useRef(null)\n\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/(staff)/\" } }) {\n        nodes {\n          id\n          html\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  `)\n\n  let panes = data.allMarkdownRemark.nodes.map(p => {\n    return {\n      menuItem: p.frontmatter.title,\n      render: () => (\n        <Container text dangerouslySetInnerHTML={{ __html: p.html }} />\n      ),\n    }\n  })\n\n  const memberships = () => {\n    return (\n      <Container text>\n        <h1>Professional Memberships & Registrations</h1>\n        <p>\n          Supporting the professional life of peers and students have been\n          important to me. Across the years I have resided on numerous\n          professional and external academic committees and internal academic\n          committees within the institutions with whom I have worked. Currently\n          I am a member of the Psychotherapy and Counselling Federation of\n          Australian (PACFA) Education Accreditation Committee (EPAC), sitting\n          on various of their course accreditation panels.\n        </p>\n        <p>\n          Current professional association memberships and provider rights\n          include:\n        </p>\n        <ol>\n          <li>\n            I am registered psychologist with Australian Health Professionals\n            Regulation Agency - Psychology Board of Australia{' '}\n          </li>\n          <li>I am a registered Medicare provider</li>\n          <li>\n            I am a full member of the Australian Psychological Society (APS)\n          </li>\n          <li>\n            I am a full member of the American Psychological Association (APA).\n          </li>\n          <li>\n            I am an associate member of the Christian Counselling Association\n            (CCAA).{' '}\n          </li>\n        </ol>\n        <Divider hidden />\n        <Card.Group centered>\n          <Card\n            image={medicare}\n            style={{\n              justifyContent: 'center',\n              padding: '.5rem',\n            }}\n            href=\"https://www.humanservices.gov.au/organisations/health-professionals?utm_id=9\"\n          />\n          <Card\n            image={ahpra}\n            style={{\n              justifyContent: 'center',\n              padding: '.5rem',\n            }}\n            href=\"https://www.ahpra.gov.au/\"\n          />\n          <Card\n            image={aps}\n            style={{\n              justifyContent: 'center',\n              padding: '.5rem',\n            }}\n            href=\"https://www.psychology.org.au/\"\n          />\n          <Card\n            image={apa}\n            style={{\n              justifyContent: 'center',\n              padding: '.5rem',\n              background: 'white',\n            }}\n            href=\"https://www.apa.org/index\"\n          />\n        </Card.Group>\n      </Container>\n    )\n  }\n\n  panes.push({ menuItem: 'Memberships', render: () => memberships() })\n\n  return (\n    <Layout>\n      <Jumbotron src={waterDrops}></Jumbotron>\n      <Divider hidden />\n      <div ref={topOfTabRef} />\n\n      <Container style={{ minHeight: '50vh' }}>\n        <div ref={topOfTabRef} />\n\n        <Tab\n          menu={{\n            fluid: true,\n            stackable: true,\n            vertical: true,\n          }}\n          panes={panes}\n        ></Tab>\n      </Container>\n    </Layout>\n  )\n}\n","module.exports = __webpack_public_path__ + \"static/image_11_Water_drops_1-7d3e40efe2fb0d78f153a787dc12e5ac.jpg\";","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties;","module.exports = __webpack_public_path__ + \"static/medicare-1d51e804cd8ff4a4efef316628bbedfb.jpg\";","module.exports = __webpack_public_path__ + \"static/apa-3935ef04f51b4271c26b2eaceaf69d89.png\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\nimport Segment from '../../elements/Segment/Segment';\n/**\n * A tab pane holds the content of a tab.\n */\n\nfunction TabPane(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      loading = props.loading;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(loading, 'loading'), 'tab', className);\n  var rest = getUnhandledProps(TabPane, props);\n  var ElementType = getElementType(TabPane, props);\n  var calculatedDefaultProps = {};\n\n  if (ElementType === Segment) {\n    calculatedDefaultProps.attached = 'bottom';\n  }\n\n  return React.createElement(ElementType, _extends({}, calculatedDefaultProps, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nTabPane.handledProps = [\"active\", \"as\", \"children\", \"className\", \"content\", \"loading\"];\nTabPane.defaultProps = {\n  as: Segment,\n  active: true\n};\nTabPane.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A tab pane can be active. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A Tab.Pane can display a loading indicator. */\n  loading: PropTypes.bool\n} : {};\nTabPane.create = createShorthandFactory(TabPane, function (content) {\n  return {\n    content: content\n  };\n});\nexport default TabPane;","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _map from \"lodash/map\";\nimport _get from \"lodash/get\";\nimport _invoke from \"lodash/invoke\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { AutoControlledComponent as Component, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport Grid from '../../collections/Grid/Grid';\nimport GridColumn from '../../collections/Grid/GridColumn';\nimport Menu from '../../collections/Menu/Menu';\nimport TabPane from './TabPane';\n/**\n * A Tab is a hidden section of content activated by a Menu.\n * @see Menu\n * @see Segment\n */\n\nvar Tab =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Tab, _Component);\n\n  function Tab() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Tab);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Tab)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleItemClick\", function (e, _ref) {\n      var index = _ref.index;\n\n      _invoke(_this.props, 'onTabChange', e, _objectSpread({}, _this.props, {\n        activeIndex: index\n      }));\n\n      _this.trySetState({\n        activeIndex: index\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Tab, [{\n    key: \"getInitialAutoControlledState\",\n    value: function getInitialAutoControlledState() {\n      return {\n        activeIndex: 0\n      };\n    }\n  }, {\n    key: \"renderItems\",\n    value: function renderItems() {\n      var _this$props = this.props,\n          panes = _this$props.panes,\n          renderActiveOnly = _this$props.renderActiveOnly;\n      var activeIndex = this.state.activeIndex;\n      if (renderActiveOnly) return _invoke(_get(panes, \"[\".concat(activeIndex, \"]\")), 'render', this.props);\n      return _map(panes, function (_ref2, index) {\n        var pane = _ref2.pane;\n        return TabPane.create(pane, {\n          overrideProps: {\n            active: index === activeIndex\n          }\n        });\n      });\n    }\n  }, {\n    key: \"renderMenu\",\n    value: function renderMenu() {\n      var _this$props2 = this.props,\n          menu = _this$props2.menu,\n          panes = _this$props2.panes,\n          menuPosition = _this$props2.menuPosition;\n      var activeIndex = this.state.activeIndex;\n\n      if (menu.tabular === true && menuPosition === 'right') {\n        menu.tabular = 'right';\n      }\n\n      return Menu.create(menu, {\n        autoGenerateKey: false,\n        overrideProps: {\n          items: _map(panes, 'menuItem'),\n          onItemClick: this.handleItemClick,\n          activeIndex: activeIndex\n        }\n      });\n    }\n  }, {\n    key: \"renderVertical\",\n    value: function renderVertical(menu) {\n      var _this$props3 = this.props,\n          grid = _this$props3.grid,\n          menuPosition = _this$props3.menuPosition;\n\n      var paneWidth = grid.paneWidth,\n          tabWidth = grid.tabWidth,\n          gridProps = _objectWithoutProperties(grid, [\"paneWidth\", \"tabWidth\"]);\n\n      var position = menuPosition || menu.props.tabular === 'right' && 'right' || 'left';\n      return React.createElement(Grid, gridProps, position === 'left' && GridColumn.create({\n        width: tabWidth,\n        children: menu\n      }, {\n        autoGenerateKey: false\n      }), GridColumn.create({\n        width: paneWidth,\n        children: this.renderItems(),\n        stretched: true\n      }, {\n        autoGenerateKey: false\n      }), position === 'right' && GridColumn.create({\n        width: tabWidth,\n        children: menu\n      }, {\n        autoGenerateKey: false\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var menu = this.renderMenu();\n      var rest = getUnhandledProps(Tab, this.props);\n      var ElementType = getElementType(Tab, this.props);\n\n      if (menu.props.vertical) {\n        return React.createElement(ElementType, rest, this.renderVertical(menu));\n      }\n\n      return React.createElement(ElementType, rest, menu.props.attached !== 'bottom' && menu, this.renderItems(), menu.props.attached === 'bottom' && menu);\n    }\n  }]);\n\n  return Tab;\n}(Component);\n\n_defineProperty(Tab, \"autoControlledProps\", ['activeIndex']);\n\n_defineProperty(Tab, \"defaultProps\", {\n  grid: {\n    paneWidth: 12,\n    tabWidth: 4\n  },\n  menu: {\n    attached: true,\n    tabular: true\n  },\n  renderActiveOnly: true\n});\n\n_defineProperty(Tab, \"Pane\", TabPane);\n\n_defineProperty(Tab, \"handledProps\", [\"activeIndex\", \"as\", \"defaultActiveIndex\", \"grid\", \"menu\", \"menuPosition\", \"onTabChange\", \"panes\", \"renderActiveOnly\"]);\n\nTab.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** The initial activeIndex. */\n  defaultActiveIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Index of the currently active tab. */\n  activeIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Shorthand props for the Menu.\n   * tabular, if true, will derive final value from `menuPosition`, otherwise set 'left' or 'right' explicitly.\n   */\n  menu: PropTypes.object,\n\n  /** Align vertical menu */\n  menuPosition: PropTypes.oneOf(['left', 'right']),\n\n  /** Shorthand props for the Grid. */\n  grid: PropTypes.object,\n\n  /**\n   * Called on tab change.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and proposed new activeIndex.\n   * @param {object} data.activeIndex - The new proposed activeIndex.\n   */\n  onTabChange: PropTypes.func,\n\n  /**\n   * Array of objects describing each Menu.Item and Tab.Pane:\n   * { menuItem: 'Home', render: () => <Tab.Pane /> }\n   * or\n   * { menuItem: 'Home', pane: 'Welcome' }\n   */\n  panes: PropTypes.arrayOf(PropTypes.shape({\n    menuItem: customPropTypes.itemShorthand,\n    pane: customPropTypes.itemShorthand,\n    render: PropTypes.func\n  })),\n\n  /** A Tab can render only active pane. */\n  renderActiveOnly: PropTypes.bool\n} : {};\nexport default Tab;","module.exports = __webpack_public_path__ + \"static/ahpra-e85cea386970891032a81a8a6b64fc7b.png\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a description with one or more paragraphs.\n */\n\nfunction CardDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'description', className);\n  var rest = getUnhandledProps(CardDescription, props);\n  var ElementType = getElementType(CardDescription, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardDescription.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardDescription.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardDescription;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a header.\n */\n\nfunction CardHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(CardHeader, props);\n  var ElementType = getElementType(CardHeader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card header can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain content metadata.\n */\n\nfunction CardMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'meta', className);\n  var rest = getUnhandledProps(CardMeta, props);\n  var ElementType = getElementType(CardMeta, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardMeta.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardMeta.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card meta can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardMeta;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\nimport CardDescription from './CardDescription';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card can contain blocks of content or extra content meant to be formatted separately from the main content.\n */\n\nfunction CardContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      meta = props.meta,\n      textAlign = props.textAlign;\n  var classes = cx(useKeyOnly(extra, 'extra'), useTextAlignProp(textAlign), 'content', className);\n  var rest = getUnhandledProps(CardContent, props);\n  var ElementType = getElementType(CardContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(CardHeader, function (val) {\n    return {\n      content: val\n    };\n  }, header, {\n    autoGenerateKey: false\n  }), createShorthand(CardMeta, function (val) {\n    return {\n      content: val\n    };\n  }, meta, {\n    autoGenerateKey: false\n  }), createShorthand(CardDescription, function (val) {\n    return {\n      content: val\n    };\n  }, description, {\n    autoGenerateKey: false\n  }));\n}\n\nCardContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"meta\", \"textAlign\"];\nCardContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** A card can contain extra content meant to be formatted separately from the main content. */\n  extra: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport _map from \"lodash/map\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useWidthProp } from '../../lib';\nimport Card from './Card';\n/**\n * A group of cards.\n */\n\nfunction CardGroup(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      doubling = props.doubling,\n      items = props.items,\n      itemsPerRow = props.itemsPerRow,\n      stackable = props.stackable,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(doubling, 'doubling'), useKeyOnly(stackable, 'stackable'), useTextAlignProp(textAlign), useWidthProp(itemsPerRow), 'cards', className);\n  var rest = getUnhandledProps(CardGroup, props);\n  var ElementType = getElementType(CardGroup, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  var itemsJSX = _map(items, function (item) {\n    var key = item.key || [item.header, item.description].join('-');\n    return React.createElement(Card, _extends({\n      key: key\n    }, item));\n  });\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), itemsJSX);\n}\n\nCardGroup.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"content\", \"doubling\", \"items\", \"itemsPerRow\", \"stackable\", \"textAlign\"];\nCardGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A group of cards can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A group of cards can double its column width for mobile. */\n  doubling: PropTypes.bool,\n\n  /** Shorthand array of props for Card. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A group of cards can set how many cards should exist in a row. */\n  itemsPerRow: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A group of cards can automatically stack rows to a single columns on mobile devices. */\n  stackable: PropTypes.bool,\n\n  /** A card group can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardGroup;","import \"core-js/modules/es6.string.link\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\nimport Image from '../../elements/Image';\nimport CardContent from './CardContent';\nimport CardDescription from './CardDescription';\nimport CardGroup from './CardGroup';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card displays site content in a manner similar to a playing card.\n */\n\nvar Card =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Card, _Component);\n\n  function Card() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Card)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClick\", function (e) {\n      var onClick = _this.props.onClick;\n      if (onClick) onClick(e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          centered = _this$props.centered,\n          children = _this$props.children,\n          className = _this$props.className,\n          color = _this$props.color,\n          content = _this$props.content,\n          description = _this$props.description,\n          extra = _this$props.extra,\n          fluid = _this$props.fluid,\n          header = _this$props.header,\n          href = _this$props.href,\n          image = _this$props.image,\n          link = _this$props.link,\n          meta = _this$props.meta,\n          onClick = _this$props.onClick,\n          raised = _this$props.raised;\n      var classes = cx('ui', color, useKeyOnly(centered, 'centered'), useKeyOnly(fluid, 'fluid'), useKeyOnly(link, 'link'), useKeyOnly(raised, 'raised'), 'card', className);\n      var rest = getUnhandledProps(Card, this.props);\n      var ElementType = getElementType(Card, this.props, function () {\n        if (onClick) return 'a';\n      });\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes,\n          href: href,\n          onClick: this.handleClick\n        }), children);\n      }\n\n      if (!childrenUtils.isNil(content)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes,\n          href: href,\n          onClick: this.handleClick\n        }), content);\n      }\n\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), Image.create(image, {\n        autoGenerateKey: false\n      }), (description || header || meta) && React.createElement(CardContent, {\n        description: description,\n        header: header,\n        meta: meta\n      }), extra && React.createElement(CardContent, {\n        extra: true\n      }, extra));\n    }\n  }]);\n\n  return Card;\n}(Component);\n\n_defineProperty(Card, \"Content\", CardContent);\n\n_defineProperty(Card, \"Description\", CardDescription);\n\n_defineProperty(Card, \"Group\", CardGroup);\n\n_defineProperty(Card, \"Header\", CardHeader);\n\n_defineProperty(Card, \"Meta\", CardMeta);\n\n_defineProperty(Card, \"handledProps\", [\"as\", \"centered\", \"children\", \"className\", \"color\", \"content\", \"description\", \"extra\", \"fluid\", \"header\", \"href\", \"image\", \"link\", \"meta\", \"onClick\", \"raised\"]);\n\nexport { Card as default };\nCard.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A Card can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A Card can be formatted to display different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for primary content of CardContent. */\n  extra: customPropTypes.contentShorthand,\n\n  /** A Card can be formatted to take up the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Render as an `a` tag instead of a `div` and adds the href attribute. */\n  href: PropTypes.string,\n\n  /** A card can contain an Image component. */\n  image: customPropTypes.itemShorthand,\n\n  /** A card can be formatted to link to other content. */\n  link: PropTypes.bool,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /**\n   * Called on click. When passed, the component renders as an `a`\n   * tag by default instead of a `div`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A Card can be formatted to raise above the page. */\n  raised: PropTypes.bool\n} : {};"],"sourceRoot":""}